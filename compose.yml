services:

  telegram-bot:
    image: telegram-bot
    build:
      context: go-telegram/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file: .env

  ollama:
    image: ollama/ollama
    container_name: aws-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    environment:
      - OLLAMA_DEBUG=true
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  email-lambda:
    image: email-lambda
    build:
      context: email_lambda/
      dockerfile: Dockerfile
    ports:
      - "9000:8080"
    environment:
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_PASSWORD=${SENDER_PASSWORD}
    env_file:
      - .env
    entrypoint: ["/usr/local/bin/aws-lambda-rie"]
    command: ["./main"]

  nodejs-cdk:
    # used for local development
    image: 'local-aws-cdk'
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: '/home/cdk'
    env_file:
      - .env
    volumes:
      - './:/home/cdk'
      - '${HOME}/.aws/:/root/.aws/'
      - '/var/run/docker.sock:/var/run/docker.sock' # for docker-in-docker
    command: ["bash", "-c", "while true; do sleep 30; done"]
    network_mode: "host"

  backend:
    image: backend
    container_name: backend
    build:
      context: backend/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ~/.aws:/root/.aws:ro # read-only
    env_file: .env



volumes:
  ollama:
    name: ollama